---
- hosts: vms
  remote_user: root
  become: yes
  become_user: "{{ project_name }}"
  gather_facts: false
  vars_files:
    - vars.yml

  tasks:

    - name: Allow sudo_user to access Ansible's SSH_AUTH_SOCK
      become: no
      shell: >
        setfacl -m {{ project_name }}:x  $(dirname "$SSH_AUTH_SOCK") ;
        setfacl -m {{ project_name }}:rwx "$SSH_AUTH_SOCK"
      changed_when: false

    - name: Pull / clone main project repo
      git:
        repo: "{{ project_repo }}"
        dest: "{{ project_root }}"
        version: "{{ project_version }}"
        accept_hostkey: yes
      notify:
        - collect static
        - restart phase

    - name: Install additional document apps
      git:
        repo: "{{ item.repo }}"
        dest: "{{ install_root }}/{{ item.name }}"
        accept_hostkey: yes
        version: "{{ project_version }}"
      with_items: "{{ document_apps }}"
      notify:
        - collect static
        - restart phase

    - name: install python packages
      pip: requirements={{ project_root }}/requirements.txt virtualenv={{ venv_dir }}
      notify:
        - collect static
        - restart phase

    - name: django migrate
      django_manage:
        command: migrate
        app_path: "{{ django_root }}"
        virtualenv: "{{ venv_dir }}"
        settings: "{{ django_settings }}"
      notify: restart phase

    - name: django clear cache
      django_manage:
        command: clearcache
        app_path: "{{ django_root }}"
        virtualenv: "{{ venv_dir }}"
        settings: "{{ django_settings }}"

  handlers:
    - name: collect static
      django_manage:
        command: collectstatic
        app_path: "{{ django_root }}"
        virtualenv: "{{ venv_dir }}"
        settings: "{{ django_settings }}"
      notify: restart phase

    - name: restart phase
      become: no
      supervisorctl: name=phase state=restarted
      notify: restart celery

    - name: restart celery
      become: no
      supervisorctl: name=celery state=restarted
